//use Gradle plugins for Java webapp and eclipse WTP
apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'war'	
 
repositories {
	//use Maven repository for dependencies
 	mavenCentral()
}

dependencies {
	//include in compile and in war file
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.1'
	compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.1'
	compile group: 'org.apache.logging.log4j', name: 'log4j-web', version: '2.1'
    compile group: 'org.hibernate', name: 'hibernate-core', version: '4.3.6.Final'
    compile group: 'org.hibernate', name: 'hibernate-c3p0', version: '4.3.6.Final'
	compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.31'
	compile group: 'jstl', name: 'jstl', version: '1.2'   
	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.3.2'
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.2.2'
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.2.2'
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.2.2' 	
	compile group: 'javax.mail', name: 'mail', version: '1.4.7'
	compile group: 'joda-time', name: 'joda-time', version: '2.5'
	
	//include in compile only, excluded in the war
	providedCompile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.0.1'
	providedCompile group: 'javax.servlet.jsp', name: 'jsp-api', version: '2.2'

	//include in tests	
	testCompile group: 'junit', name: 'junit', version: '4.11'	
	testCompile group: 'org.mockito', name: 'mockito-core', version: '1.10.19'	
	testCompile group: 'com.h2database', name: 'h2', version: '1.4.191'	
}

war{
	//copy webapp resources to the WAR file
 	from 'main/webapp/resources'
}

tasks.withType(JavaCompile) {
	//Use UTF-8 encoding
	options.encoding = "utf-8"
}

configurations {
	//Define integration test task configurations
	itestCompile.extendsFrom testCompile
	itestRuntime.extendsFrom testRuntime
}

sourceSets {
	//Define folders for integration test task
	itest {
		compileClasspath += main.output + test.output
		runtimeClasspath += main.output + test.output
    
		java.srcDir file('src/itest/java')  
		resources.srcDir file('src/itest/resources')
	}  
}

//Define integration test task
task itest(type: Test) {
	testClassesDir = sourceSets.itest.output.classesDir
	classpath = sourceSets.itest.runtimeClasspath
	itest.reports.html.destination = file("$buildDir/reports/itests")
}