<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC
 "-//Hibernate/Hibernate Mapping DTD//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
 <hibernate-mapping>
	<sql-query name="SQL_STATS_CREATE">
	    INSERT INTO tvisit(ip,`date`)
	    VALUES (IFNULL(INET_ATON(?),0),NOW());       
	</sql-query>	
	<sql-query name="SQL_STATS_SAVE_USER">
	    INSERT IGNORE INTO tvisituser(idVisit,idUser)
	    VALUES (?,?);       
	</sql-query>
	<sql-query name="SQL_STATS_SAVE_LESSON">
	    INSERT IGNORE INTO tvisitlesson(idVisit,idLesson)
	    VALUES (?,?);       
	</sql-query>
	<sql-query name="SQL_STATS_GET_LESSON_VIEWS_COUNT">
	    SELECT COALESCE( COUNT(DISTINCT tvs.idVisit)/7,COUNT(DISTINCT tvm.idVisit)/30,COUNT(DISTINCT tvt.idVisit)/datediff(now(),min(tvt.date))) as lessonViews
	    FROM tvisitlesson tvl
	    LEFT JOIN tvisit tvt USING(idvisit)
		LEFT JOIN tvisit tvm ON tvm.idvisit = tvl.idvisit and tvm.date > date_sub(now(),INTERVAL 1 MONTH)
		LEFT JOIN tvisit tvs ON tvs.idvisit = tvl.idvisit and tvs.date > date_sub(now(),INTERVAL 1 WEEK)
	    WHERE idLesson = ?
	    GROUP BY idLesson;       
	</sql-query>
	<sql-query name="SQL_STATS_GET_USERTEST_COUNT">
	    SELECT COUNT(idVisitTest) as attempts
	    FROM tvisittest
	    JOIN tvisituser USING (idVisit)
	    WHERE idLessonTest = ? AND idUser = ?
	    GROUP BY idLessonTest, idUser;       
	</sql-query>	
	<sql-query name="SQL_STATS_SAVE_USERTEST">
	    INSERT INTO tvisittest(idVisit, idLessonTest, points, `date`)
	    VALUES (?,?,?,NOW());       
	</sql-query>
	<sql-query name="SQL_STATS_SAVE_USERTEST_KO">
	    INSERT IGNORE INTO tvisittestkos(idVisitTest, idQuestion)
	    VALUES (?,?);       
	</sql-query>
	<sql-query name="SQL_STATS_SAVE_USERTESTRANK">
	    INSERT INTO tvisittestrank(idLessonTest, idUser, idVisitTest, attempts)
	    VALUES (?,?,?,?)
	    ON DUPLICATE KEY UPDATE idVisitTest = ?, attempts = ?;   
	</sql-query>
	<sql-query name="SQL_STATS_GET_USERTESTRANK">
	    SELECT idLessonTest, idUser, idVisitTest, attempts, points, `date`
	    FROM tvisittestrank
	    JOIN tvisittest USING (idvisittest, idLessonTest)
	    WHERE idLessonTest = ? AND idUser = ?;   
	</sql-query>
	<sql-query name="SQL_STATS_GET_USERIDS_TESTRANK">
	    SELECT idUser
	    FROM tvisittestrank
	    JOIN tvisittest USING (idvisittest, idLessonTest)
	    WHERE idLessonTest = ?
	    ORDER BY points DESC,attempts ASC,`date` DESC
	    LIMIT ?;   
	</sql-query>
	<sql-query name="SQL_STATS_SAVE_TAG">
	    INSERT IGNORE INTO tvisittag(idVisit,idTag)
	    VALUES (?,?);       
	</sql-query>
	<sql-query name="SQL_STATS_GET_TAG_VIEWS_COUNT">
	    SELECT COALESCE( COUNT(DISTINCT tvs.idVisit)/7,COUNT(DISTINCT tvm.idVisit)/30,COUNT(DISTINCT tvy.idVisit)/datediff(now(),min(tvy.date))) as tagViews
	    FROM tvisittag tvt 
	    LEFT JOIN tvisit tvy USING(idvisit)
		LEFT JOIN tvisit tvm ON tvm.idvisit = tvt.idvisit and tvm.date > date_sub(now(),INTERVAL 1 MONTH)
		LEFT JOIN tvisit tvs ON tvs.idvisit = tvt.idvisit and tvs.date > date_sub(now(),INTERVAL 1 WEEK)
	    WHERE idTag = ?
	    GROUP BY idTag;       
	</sql-query>
	<sql-query name="SQL_STATS_GET_STATS_LESSONTEST_NUM_VISIT_TESTS">
	    SELECT COUNT(idVisitTest) as numTests
		FROM teachonsnap.tvisittest		
		WHERE idlessontest = ?
		GROUP BY idLessonTest      
	</sql-query>
	<sql-query name="SQL_STATS_GET_STATS_LESSONTEST_QUESTION_KOS">
	    SELECT idQuestion, COUNT(DISTINCT tko.idQuestion) as KOs
		FROM teachonsnap.tvisittest
		JOIN teachonsnap.tquestion USING(idLessonTest)
		LEFT JOIN teachonsnap.tvisittestkos tko USING(idvisittest,idQuestion)
		WHERE idlessontest = ?
		GROUP BY idQuestion      
	</sql-query>
	
</hibernate-mapping>