<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC
 "-//Hibernate/Hibernate Mapping DTD//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
 <hibernate-mapping>
	<sql-query name="SQL_LESSON_GET_LESSON">
		SELECT idLesson, idUser, idLanguage, title, date,text,URIname,
			IFNULL(idLessonTest,-1) as idLessonTest,IFNULL(idLessonVideo,-1) as idLessonVideo
	    FROM tlesson
	    LEFT JOIN tlessontxt USING(idLesson)
	    LEFT JOIN tlessontest using (idLesson)
	    LEFT JOIN tlessonvideo using (idLesson)		    
	    WHERE idLesson = ?
	</sql-query>
	<sql-query name="SQL_LESSON_GET_LESSONIDS_FROM_TAG">
	    SELECT idLesson
	    FROM tlessontag
	    JOIN ttag USING(idTag)
	    WHERE tag = ?
	    ORDER BY idLesson DESC
	    LIMIT ?,11
	</sql-query>
	<sql-query name="SQL_LESSON_GET_LESSONIDS_FROM_AUTHOR">
	    SELECT idLesson
	    FROM tlesson
	    JOIN tuserauthor USING(iduser)
	    WHERE tuserauthor.URIName = ?
	    ORDER BY idLesson DESC
	    LIMIT ?,11
	</sql-query>	
	<sql-query name="SQL_LESSON_GET_LESSONID_FROM_URI">
	    SELECT idLesson
	    FROM tlesson	    
	    WHERE URIname = ?
	</sql-query>
	<sql-query name="SQL_LESSON_GET_LESSONTAGIDS">
	    SELECT idTag
	    FROM tlessontag
	    WHERE idLesson = ?
	</sql-query>
	<sql-query name="SQL_LESSON_GET_LINKEDLESSONIDS">
	    SELECT idLessonReferenced
	    FROM tlessonlinked	    
	    WHERE idLesson = ?
	    ORDER BY priority
	</sql-query>
	<sql-query name="SQL_LESSON_GET_MOREINFOLINKIDS">
	    SELECT idLink
	    FROM tlessonmoreinfo	    
	    WHERE idLesson = ?
	    ORDER BY priority
	</sql-query>
	<sql-query name="SQL_LESSON_GET_SOURCELINKIDS">
	    SELECT idLink
	    FROM tlessonsource	    
	    WHERE idLesson = ?
	    ORDER BY priority
	</sql-query>
	<sql-query name="SQL_LESSON_GET_LINK">
		SELECT idLink, URL, tlink.desc
	    FROM tlink	    	    
	    WHERE idLink = ?
	</sql-query>
	<sql-query name="SQL_LESSON_GET_TAG">
		SELECT idTag, tag
	    FROM ttag	    	    
	    WHERE idTag = ?
	</sql-query>
	<sql-query name="SQL_LESSON_GET_CLOUDTAG_TAG">
		SELECT idTag,weight FROM (
			SELECT 	idTag, COUNT(idlesson) AS weight
			FROM tlessontag
			GROUP BY idtag
			ORDER BY weight DESC
			LIMIT 50
		) AS t
		JOIN ttag USING (idtag)
		ORDER BY tag;
	</sql-query>
	<sql-query name="SQL_LESSON_GET_CLOUDTAG_AUTHOR">
		SELECT idUser,weight FROM (
			SELECT 	idUser, COUNT(idlesson) AS weight
			FROM tlesson
			GROUP BY idUser
			ORDER BY weight DESC
			LIMIT 50
		) AS t
		JOIN tuser USING (iduser)
		ORDER BY lastname;
	</sql-query>
	<sql-query name="SQL_LESSON_GET_LASTLESSONIDS">
	    SELECT idLesson
	    FROM tlesson
	    ORDER BY idLesson DESC	    
	    LIMIT ?,11
	</sql-query>
	<sql-query name="SQL_LESSON_GET_TEST">
		SELECT idLessonTest,idlesson,numQuestions,numAnswers,multiplechoice
	    FROM tlessontest    
	    WHERE idLessonTest = ?
	</sql-query>
	<sql-query name="SQL_LESSON_GET_QUESTION">
		SELECT idQuestion,idLessonTest,text,priority
	    FROM tquestion    
	    WHERE idQuestion = ?
	</sql-query>	
	<sql-query name="SQL_LESSON_GET_QUESTIONIDS_FROM_IDLESSONTEST">
	    SELECT idQuestion
	    FROM tquestion
	    WHERE idLessonTest = ?
	    ORDER BY priority
	</sql-query>
	<sql-query name="SQL_LESSON_GET_ANSWERIDS_FROM_IDQUESTION">
	    SELECT idAnswer
	    FROM tanswer
	    WHERE idQuestion = ?	    
	</sql-query>
	<sql-query name="SQL_LESSON_GET_ANSWER">
	    SELECT idAnswer,idQuestion,text,correct,reason
	    FROM tanswer
	    WHERE idAnswer = ?	    
	</sql-query>
	<sql-query name="SQL_LESSON_GET_LESSONVIDEOS">
	    SELECT idVideoFile,idLessonVideo,idVideoRepository,filename,mimetype
	    FROM tvideofile
	    JOIN tvideomimetype USING (idvideomimetype)
	    WHERE idLessonVideo = ?	    
	</sql-query>
	<sql-query name="SQL_LESSON_CREATE_LESSON">
	    INSERT INTO tlesson(idUser, idLanguage, title, `date`,URIname)
	    VALUES (?, ?, ?, now(),?)   
	</sql-query>
	<sql-query name="SQL_LESSON_SAVE_TEXT">
	    INSERT INTO tlessontxt(idLesson,text)
	    VALUES (?,?)
	    ON DUPLICATE KEY UPDATE text = ?   
	</sql-query>		
</hibernate-mapping>