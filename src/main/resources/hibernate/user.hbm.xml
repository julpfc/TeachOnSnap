<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC
 "-//Hibernate/Hibernate Mapping DTD//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
 <hibernate-mapping>
	<sql-query name="SQL_USER_GET_USER">
	    SELECT idUser,email,firstName,lastName,idLanguage,IFNULL(tuserauthor.idUser,0) as author,
	    	IFNULL(tuseradmin.idUser,0) as admin,URIName, IFNULL(tuserbanned.idUser,0) as banned,
	    	extraInfo
	    FROM tuser
	    LEFT JOIN tuserauthor USING (idUser)
	    LEFT JOIN tuserauthoruri USING (idUser)
	    LEFT JOIN tuseradmin USING (idUser)
	    LEFT JOIN tuserbanned USING(idUser)
	    LEFT JOIN tuserextrainfo USING(idUser)
	    WHERE idUser=?
	</sql-query>
	<sql-query name="SQL_USER_GET_IDUSER_FROM_EMAIL">
	    SELECT idUser
	    FROM tuser	    
	    WHERE email=?
	</sql-query>
	<sql-query name="SQL_USER_GET_ISVALIDPASSWORD">
	    SELECT password = PASSWORD(?)
	    FROM tuser	    
	    WHERE idUser=?
	</sql-query>
	<sql-query name="SQL_USER_SAVE_LANGUAGE">
	    UPDATE tuser
	    SET idLanguage = ?	    
	    WHERE idUser=?
	</sql-query>
	<sql-query name="SQL_USER_SAVE_FIRSTNAME">
	    UPDATE tuser
	    SET firstName = ?	    
	    WHERE idUser=?
	</sql-query>	
	<sql-query name="SQL_USER_SAVE_LASTNAME">
	    UPDATE tuser
	    SET lastName = ?	    
	    WHERE idUser=?
	</sql-query>	
	<sql-query name="SQL_USER_SAVE_PASSWORD">
	    UPDATE tuser
	    SET password = PASSWORD(?)	    
	    WHERE idUser=?
	</sql-query>			
	<sql-query name="SQL_USER_SAVE_TMP_TOKEN">
	    INSERT INTO tusertmptoken(idUser, token)
	    VALUES (?,?)
	    ON DUPLICATE KEY UPDATE token = ?;   
	</sql-query>
	<sql-query name="SQL_USER_GET_IDUSER_FROM_TMP_TOKEN">
	    SELECT idUser
	    FROM tusertmptoken	    
	    WHERE token=?
	</sql-query>	
	<sql-query name="SQL_USER_DELETE_TMP_TOKEN">
	    DELETE
	    FROM tusertmptoken	    
	    WHERE idUser=?
	</sql-query>	
	<sql-query name="SQL_USER_CREATE_USER">
	    INSERT INTO tuser(email, password, firstname, lastname, idLanguage, dateIni)
	    VALUES (?, '', ?, ?, ?, now());	       
	</sql-query>
	<sql-query name="SQL_USER_GET_USERIDS">
	    SELECT idUser
	    FROM tuser
	    LIMIT ?,?;	       
	</sql-query>
	<sql-query name="SQL_USER_SEARCH_USERIDS_BY_EMAIL">
	    SELECT idUser
	    FROM tuser
	    WHERE email LIKE CONCAT('%',?,'%')
	    LIMIT ?,?;	       
	</sql-query>
	<sql-query name="SQL_USER_SEARCH_USERIDS_BY_NAME">
	    SELECT idUser
	    FROM tuser
	    WHERE firstname LIKE CONCAT('%',?,'%') OR lastname LIKE CONCAT('%',?,'%') 
	    LIMIT ?,?;	       
	</sql-query>
	<sql-query name="SQL_USER_SAVE_AUTHOR">
	    INSERT IGNORE INTO tuserauthor(idUser)
	    VALUES (?);   
	</sql-query>
	<sql-query name="SQL_USER_SAVE_AUTHOR_URI">
	    INSERT INTO tuserauthoruri(idUser, URIname)
	    VALUES (?,?)
	    ON DUPLICATE KEY UPDATE URIName = ?;   
	</sql-query>
	<sql-query name="SQL_USER_SAVE_ADMIN">
	    INSERT IGNORE INTO tuseradmin(idUser)
	    VALUES (?);   
	</sql-query>
	<sql-query name="SQL_USER_DELETE_ADMIN">
	    DELETE FROM tuseradmin
	    WHERE idUser = ?;   
	</sql-query>
	<sql-query name="SQL_USER_DELETE_AUTHOR">
	    DELETE FROM tuserauthor
	    WHERE idUser = ?;   
	</sql-query>
	<sql-query name="SQL_USER_GET_USER_BANNED_INFO">
	    SELECT idUser, reason, date, idAdmin
	    FROM tuserbanned
	    WHERE idUser = ?;   
	</sql-query>
	<sql-query name="SQL_USER_BLOCK">
	    INSERT INTO tuserbanned(idUser, reason, date, idAdmin)
	    VALUES (?, ?, now(), ?)
	    ON DUPLICATE KEY UPDATE reason = ?, date = now(), idAdmin = ?;   
	</sql-query>
	<sql-query name="SQL_USER_UNBLOCK">
	    DELETE FROM tuserbanned
	    WHERE idUser = ?;   
	</sql-query>
	<sql-query name="SQL_USER_GET_AUTHORIDS">
	    SELECT idUser
	    FROM tuserauthor
	    LIMIT ?,?;	       
	</sql-query>
	<sql-query name="SQL_USER_SEARCH_AUTHORIDS_BY_EMAIL">
	    SELECT idUser
	    FROM tuser
	    JOIN tuserauthor USING(idUser)
	    WHERE email LIKE CONCAT('%',?,'%')
	    LIMIT ?,?;	       
	</sql-query>
	<sql-query name="SQL_USER_SEARCH_AUTHORIDS_BY_NAME">
	    SELECT idUser
	    FROM tuser
	    JOIN tuserauthor USING(idUser)
	    WHERE firstname LIKE CONCAT('%',?,'%') OR lastname LIKE CONCAT('%',?,'%') 
	    LIMIT ?,?;	       
	</sql-query>
	<sql-query name="SQL_USER_GET_FOLLOW_AUTHORIDS">
	    SELECT idUser
	    FROM tfollowuser	    
	    WHERE idFollower = ?;	       
	</sql-query>
	<sql-query name="SQL_USER_GET_FOLLOW_LESSONIDS">
	    SELECT idLesson
	    FROM tfollowlesson	    
	    WHERE idFollower = ?;	       
	</sql-query>
	<sql-query name="SQL_USER_ADD_FOLLOW_AUTHOR">
	    INSERT IGNORE INTO tfollowuser(idFollower, idUser)
	    VALUES(?, ?);	       
	</sql-query>
	<sql-query name="SQL_USER_REMOVE_FOLLOW_AUTHOR">
	    DELETE FROM tfollowuser
	    WHERE idFollower = ? AND idUser = ?;	       
	</sql-query>
	<sql-query name="SQL_USER_ADD_FOLLOW_LESSON">
	    INSERT IGNORE INTO tfollowlesson(idFollower, idLesson)
	    VALUES(?, ?);	       
	</sql-query>
	<sql-query name="SQL_USER_REMOVE_FOLLOW_LESSON">
	    DELETE FROM tfollowlesson
	    WHERE idFollower = ? AND idLesson = ?;	       
	</sql-query>
	<sql-query name="SQL_USER_GET_AUTHOR_FOLLOWERIDS">
	    SELECT idFollower
	    FROM tfollowuser	    
	    WHERE idUser = ?
	    UNION
	    SELECT tugm.idUser as idFollower
	    FROM tfollowgroupuser tfgu
	    JOIN tusergroupmember tugm ON (idfollowergroup=idusergroup)	    
	    WHERE tfgu.idUser = ?
	    GROUP BY idFollower;	       
	</sql-query>
	<sql-query name="SQL_USER_GET_LESSON_FOLLOWERIDS">
	    SELECT idFollower
	    	FROM tfollowlesson
	    	WHERE idLesson = ?
		UNION
			SELECT tugm.idUser as idFollower
	    	FROM tfollowgrouptag tfgt
	    	JOIN tusergroupmember tugm ON (idfollowergroup=idusergroup)	    
        	JOIN tlessontag USING (idtag)
	    	WHERE idlesson = ?	    
		GROUP BY idFollower   	       
	</sql-query>
	<sql-query name="SQL_USER_GET_TAG_FOLLOWERIDS">
	    SELECT tugm.idUser
	    FROM tfollowgrouptag tfgt
	    JOIN tusergroupmember tugm ON (idfollowergroup=idusergroup)	    
	    WHERE tfgt.idTag = ?
	    GROUP BY tugm.idUser;	       
	</sql-query>
	<sql-query name="SQL_USER_REMOVE_EXTRAINFO">
	    DELETE FROM tuserextrainfo
	    WHERE idUser = ?;	       
	</sql-query>
	<sql-query name="SQL_USER_SAVE_EXTRAINFO">
	    INSERT INTO tuserextrainfo(idUser, extrainfo)
	    VALUES(?, ?)
	    ON DUPLICATE KEY UPDATE extrainfo = ?;	       
	</sql-query>
	<sql-query name="SQL_USER_GET_ADMINS">
	    SELECT idUser
	    FROM tuseradmin;	       
	</sql-query>
</hibernate-mapping>